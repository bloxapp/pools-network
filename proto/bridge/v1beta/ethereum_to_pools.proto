syntax = "proto3";
package bridge.v1beta1;

option go_package = "github.com/bloxapp/pools-network/x/bridge/types";

import "gogoproto/gogo.proto";

enum ClaimType {
  Delegate = 0;
  Undelegate = 1;
  CreatePool = 2;
  CreateOperator = 3;
}

// ClaimData has a bunch of fields for different claims to use, all of them (except tx_hash and claim type) are optional
message ClaimData {
  bytes tx_hash                       = 1;
  uint64 claim_nonce                  = 2;
  ClaimType claimType                 = 3;
  repeated bytes ethereum_addresses   = 4 [(gogoproto.customtype) = "github.com/bloxapp/pools-network/shared/types.EthereumAddress"];
  repeated bytes consensus_addresses  = 5 [(gogoproto.customtype) = "github.com/bloxapp/pools-network/shared/types.ConsensusAddress"];
  repeated uint64 values              = 6; // optional by default
}

// MsgEthereumClaim is a container for events that happened on the ethereum blockchain.
// It's essentially an ethereum -> pools oracle
// The nonce is a monotonic id of the claim msg, it has to be sequential
// Due to eth1 probabilistic finality, each validator on the pools network will need to attest to all claims to make them be included in the state (2/3 vote).
message MsgEthereumClaim {
  uint64 nonce                                = 1;
  uint64 ethereum_chain_id                    = 2;
  bytes contract_address                      = 3 [(gogoproto.customtype) = "github.com/bloxapp/pools-network/shared/types.EthereumAddress", (gogoproto.nullable) = false];
  bytes consensus_address                     = 4 [(gogoproto.customtype) = "github.com/bloxapp/pools-network/shared/types.ConsensusAddress", (gogoproto.nullable) = false]; // The consensus pubkey which represents the operator in the Cosmos-SDK network
  repeated ClaimData data                     = 5 [(gogoproto.nullable) = false];
}

message EthereumBridgeContact {
  bytes contract_address  = 1 [(gogoproto.customtype) = "github.com/bloxapp/pools-network/shared/types.EthereumAddress", (gogoproto.nullable) = false];
  uint64 chain_id         = 2;
}

// ClaimAttestation is a container for counting claim attestations
message ClaimAttestation {
  ClaimData claim                   = 1 [(gogoproto.nullable) = false];
  EthereumBridgeContact contract    = 2 [(gogoproto.nullable) = false];
  map<string, bool> votes           = 3;
  uint64 accumulated_power          = 4;
  bool finalized                    = 5;
}